{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adffwdpoc202110"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlfwdpoc202110.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PCS_COMMON_DATABRICKS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "Run MODEL",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Shared/',pipeline().parameters.P_DATABRICKS)",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "INSERT PROCESS LOG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_START_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_SEQ_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SET LOAD_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@variables('V_LOAD_ID')",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@variables('V_LOAD_ID')",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "SET LOAD_ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_LOAD_ID",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.LOAD_ID",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@variables('V_LOAD_ID')",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@variables('V_LOAD_ID')",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RUN DATABRICK MODEL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run MODEL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@variables('V_LOAD_ID')",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "FAILED ON RUN DATABRICK MODEL",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run MODEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@variables('V_LOAD_ID')",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "999"
					},
					"P_STREAM_SEQ_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_AS_AT_DT": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"P_DATABRICKS": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"variables": {
					"V_STREAM_NM": {
						"type": "String",
						"defaultValue": "SALES_PRED"
					},
					"V_LOAD_ID": {
						"type": "String",
						"defaultValue": "-999"
					},
					"V_STREAM_RESULT": {
						"type": "String",
						"defaultValue": "-999"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-16T09:42:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STREAM_COMMON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "SET PROCESS LIST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SET AS_AT_DT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SET STREAM_SEQ_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_PCS_NM_LIST",
							"value": {
								"value": "@activity('GET PROCESS LIST').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET PROCESS LIST",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS_STREAM]",
								"storedProcedureParameters": {
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH PROCESS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('V_PCS_NM_LIST')",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@substring(pipeline().parameters.P_STREAM_NM,0,2)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "DB",
												"activities": [
													{
														"name": "PCS_COMMON_DATABRICKS_copy1",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "PCS_COMMON_DATABRICKS",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"P_RUN_MODE": {
																	"value": "@pipeline().parameters.P_RUN_MODE",
																	"type": "Expression"
																},
																"P_PCS_NM": {
																	"value": "@item().PCS_NM",
																	"type": "Expression"
																},
																"P_STREAM_SEQ_ID": {
																	"value": "@variables('V_STREAM_SEQ_ID')",
																	"type": "Expression"
																},
																"P_AS_AT_DT": {
																	"value": "@variables('V_AS_AT_DT')",
																	"type": "Expression"
																},
																"P_DATABRICKS": {
																	"value": "@item().PCS_NM",
																	"type": "Expression"
																}
															}
														}
													}
												]
											},
											{
												"value": "IM",
												"activities": [
													{
														"name": "PASS COMMON",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"sqlReaderQuery": "1",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "SqlServerTable1",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "PASS COMMON_copy1",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": "1",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "SqlServerTable1",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "STREAM RESULT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "UPDATE STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_STREAM_RESULT]",
								"storedProcedureParameters": {
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@variables('V_STREAM_SEQ_ID')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "FINAL STREAM",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR EACH PROCESS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_FINAL_STREAM]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@variables('V_AS_AT_DT')",
											"type": "Expression"
										}
									},
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@variables('V_STREAM_SEQ_ID')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET AS_AT_DT",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_AS_AT_DT",
							"value": {
								"value": "@activity('START STREAM').output.FIRSTROW.AS_AT_DT",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SET STREAM_SEQ_ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_STREAM_SEQ_ID",
							"value": {
								"value": "@activity('START STREAM').output.FIRSTROW.STREAM_SEQ_ID",
								"type": "Expression"
							}
						}
					},
					{
						"name": "START STREAM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_ACTV_STREAM]",
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_STREAM]",
							"storedProcedureParameters": {
								"P_STREAM_NM": {
									"value": {
										"value": "@pipeline().parameters.P_STREAM_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREAM_RESULT": {
									"value": {
										"value": "@activity('FINAL STREAM').output.firstrow.STREAM_RESULT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREAM_SEQ_ID": {
									"value": {
										"value": "@variables('V_STREAM_SEQ_ID')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET EMAIL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_EMAIL]",
								"storedProcedureParameters": {
									"P_STREAM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_NM",
											"type": "Expression"
										}
									},
									"P_STREAM_RESULT": {
										"type": "String",
										"value": {
											"value": "@activity('FINAL STREAM').output.FIRSTROW.STREAM_RESULT",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GET EMAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "STREAM RESULT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-11.southeastasia.logic.azure.com:443/workflows/938a661629634e678aa73e3bc728f571/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AzDn8dLsjp_gd_k_kvN_46bcpN25NBpPlJCCu2Qq08w",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Message\":\"@{activity('STREAM RESULT').output.firstrow.a}\",\n\"EmailTo\":\"@{activity('GET EMAIL').output.firstrow.EMAIL}\",\n\"Asat_dt\":\"@{activity('FINAL STREAM').output.firstrow.AS_AT_DT_FORMAT}\",\n\"StreamName\":\"@{pipeline().parameters.P_STREAM_NM}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_STREAM_NM": {
						"type": "string",
						"defaultValue": "IM_IMAGENET"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					}
				},
				"variables": {
					"V_STREAM_RESULT": {
						"type": "String",
						"defaultValue": "-999"
					},
					"V_PCS_NM_LIST": {
						"type": "Array",
						"defaultValue": [
							999
						]
					},
					"V_AS_AT_DT": {
						"type": "String",
						"defaultValue": "19000101"
					},
					"V_STREAM_SEQ_ID": {
						"type": "String",
						"defaultValue": "-999"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]",
				"[concat(variables('factoryId'), '/pipelines/PCS_COMMON_DATABRICKS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7461890192601530.10.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "1021-055332-qpxa3lpl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_container",
							"type": "Expression"
						},
						"fileSystem": "parquet"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CHDRNUM",
						"type": "UTF8"
					},
					{
						"name": "id_key",
						"type": "INT32"
					},
					{
						"name": "dtl__capxuser",
						"type": "UTF8"
					},
					{
						"name": "dtl__capxtimestamp",
						"type": "DECIMAL",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "dtl__capxaction",
						"type": "UTF8"
					},
					{
						"name": "dtl__capxcasdelind",
						"type": "UTF8"
					},
					{
						"name": "dtl__capxrrn",
						"type": "INT32"
					},
					{
						"name": "chdrpfx",
						"type": "UTF8"
					},
					{
						"name": "chdrcoy",
						"type": "INT32"
					},
					{
						"name": "recode",
						"type": "UTF8"
					},
					{
						"name": "servunit",
						"type": "UTF8"
					},
					{
						"name": "cnttype",
						"type": "UTF8"
					},
					{
						"name": "tranno",
						"type": "INT32"
					},
					{
						"name": "tranid",
						"type": "UTF8"
					},
					{
						"name": "validflag",
						"type": "INT32"
					},
					{
						"name": "currfrom",
						"type": "UTF8"
					},
					{
						"name": "currto",
						"type": "UTF8"
					},
					{
						"name": "proctrancd",
						"type": "UTF8"
					},
					{
						"name": "procflag",
						"type": "UTF8"
					},
					{
						"name": "procid",
						"type": "UTF8"
					},
					{
						"name": "statcode",
						"type": "UTF8"
					},
					{
						"name": "statreasn",
						"type": "UTF8"
					},
					{
						"name": "statdate",
						"type": "UTF8"
					},
					{
						"name": "stattran",
						"type": "INT32"
					},
					{
						"name": "tranlused",
						"type": "INT32"
					},
					{
						"name": "occdate",
						"type": "UTF8"
					},
					{
						"name": "ccdate",
						"type": "UTF8"
					},
					{
						"name": "crdate",
						"type": "UTF8"
					},
					{
						"name": "annamt01",
						"type": "DOUBLE"
					},
					{
						"name": "annamt02",
						"type": "DOUBLE"
					},
					{
						"name": "annamt03",
						"type": "DOUBLE"
					},
					{
						"name": "annamt04",
						"type": "DOUBLE"
					},
					{
						"name": "annamt05",
						"type": "DOUBLE"
					},
					{
						"name": "annamt06",
						"type": "DOUBLE"
					},
					{
						"name": "rnltype",
						"type": "UTF8"
					},
					{
						"name": "rnlnots",
						"type": "UTF8"
					},
					{
						"name": "rnlnotto",
						"type": "UTF8"
					},
					{
						"name": "rnlattn",
						"type": "UTF8"
					},
					{
						"name": "rnldurn",
						"type": "INT32"
					},
					{
						"name": "reptype",
						"type": "UTF8"
					},
					{
						"name": "REPNUM",
						"type": "UTF8"
					},
					{
						"name": "cownpfx",
						"type": "UTF8"
					},
					{
						"name": "cowncoy",
						"type": "INT32"
					},
					{
						"name": "COWNNUM",
						"type": "UTF8"
					},
					{
						"name": "JOWNNUM",
						"type": "UTF8"
					},
					{
						"name": "payrpfx",
						"type": "UTF8"
					},
					{
						"name": "payrcoy",
						"type": "UTF8"
					},
					{
						"name": "PAYRNUM",
						"type": "UTF8"
					},
					{
						"name": "desppfx",
						"type": "UTF8"
					},
					{
						"name": "despcoy",
						"type": "INT32"
					},
					{
						"name": "DESPNUM",
						"type": "UTF8"
					},
					{
						"name": "asgnpfx",
						"type": "UTF8"
					},
					{
						"name": "asgncoy",
						"type": "UTF8"
					},
					{
						"name": "asgnnum",
						"type": "UTF8"
					},
					{
						"name": "cntbranch",
						"type": "INT32"
					},
					{
						"name": "agntpfx",
						"type": "UTF8"
					},
					{
						"name": "agntcoy",
						"type": "INT32"
					},
					{
						"name": "AGNTNUM",
						"type": "UTF8"
					},
					{
						"name": "cntcurr",
						"type": "UTF8"
					},
					{
						"name": "acctccy",
						"type": "UTF8"
					},
					{
						"name": "crate",
						"type": "DOUBLE"
					},
					{
						"name": "payplan",
						"type": "UTF8"
					},
					{
						"name": "acctmeth",
						"type": "UTF8"
					},
					{
						"name": "BILLFREQ",
						"type": "UTF8"
					},
					{
						"name": "BILLCHNL",
						"type": "UTF8"
					},
					{
						"name": "collchnl",
						"type": "UTF8"
					},
					{
						"name": "billday",
						"type": "UTF8"
					},
					{
						"name": "billmonth",
						"type": "UTF8"
					},
					{
						"name": "billcd",
						"type": "UTF8"
					},
					{
						"name": "btdate",
						"type": "UTF8"
					},
					{
						"name": "ptdate",
						"type": "UTF8"
					},
					{
						"name": "payflag",
						"type": "UTF8"
					},
					{
						"name": "sinstfrom",
						"type": "UTF8"
					},
					{
						"name": "sinstto",
						"type": "UTF8"
					},
					{
						"name": "sinstamt01",
						"type": "DOUBLE"
					},
					{
						"name": "sinstamt02",
						"type": "DOUBLE"
					},
					{
						"name": "sinstamt03",
						"type": "DOUBLE"
					},
					{
						"name": "sinstamt04",
						"type": "DOUBLE"
					},
					{
						"name": "sinstamt05",
						"type": "DOUBLE"
					},
					{
						"name": "sinstamt06",
						"type": "DOUBLE"
					},
					{
						"name": "instfrom",
						"type": "UTF8"
					},
					{
						"name": "instto",
						"type": "UTF8"
					},
					{
						"name": "instbchnl",
						"type": "UTF8"
					},
					{
						"name": "instcchnl",
						"type": "UTF8"
					},
					{
						"name": "instfreq",
						"type": "UTF8"
					},
					{
						"name": "insttot01",
						"type": "DOUBLE"
					},
					{
						"name": "insttot02",
						"type": "DOUBLE"
					},
					{
						"name": "insttot03",
						"type": "DOUBLE"
					},
					{
						"name": "insttot04",
						"type": "DOUBLE"
					},
					{
						"name": "insttot05",
						"type": "DOUBLE"
					},
					{
						"name": "insttot06",
						"type": "DOUBLE"
					},
					{
						"name": "instpast01",
						"type": "DOUBLE"
					},
					{
						"name": "instpast02",
						"type": "DOUBLE"
					},
					{
						"name": "instpast03",
						"type": "DOUBLE"
					},
					{
						"name": "instpast04",
						"type": "DOUBLE"
					},
					{
						"name": "instpast05",
						"type": "DOUBLE"
					},
					{
						"name": "instpast06",
						"type": "DOUBLE"
					},
					{
						"name": "instjctl",
						"type": "UTF8"
					},
					{
						"name": "nofoutinst",
						"type": "INT32"
					},
					{
						"name": "outstamt",
						"type": "DOUBLE"
					},
					{
						"name": "billdate01",
						"type": "UTF8"
					},
					{
						"name": "billdate02",
						"type": "UTF8"
					},
					{
						"name": "billdate03",
						"type": "UTF8"
					},
					{
						"name": "billdate04",
						"type": "UTF8"
					},
					{
						"name": "billamt01",
						"type": "DOUBLE"
					},
					{
						"name": "billamt02",
						"type": "DOUBLE"
					},
					{
						"name": "billamt03",
						"type": "DOUBLE"
					},
					{
						"name": "billamt04",
						"type": "DOUBLE"
					},
					{
						"name": "facthous",
						"type": "UTF8"
					},
					{
						"name": "bankkey",
						"type": "UTF8"
					},
					{
						"name": "BANKACCKEY",
						"type": "UTF8"
					},
					{
						"name": "discode01",
						"type": "UTF8"
					},
					{
						"name": "discode02",
						"type": "UTF8"
					},
					{
						"name": "discode03",
						"type": "UTF8"
					},
					{
						"name": "discode04",
						"type": "UTF8"
					},
					{
						"name": "grupkey",
						"type": "UTF8"
					},
					{
						"name": "membsel",
						"type": "UTF8"
					},
					{
						"name": "aplsupr",
						"type": "UTF8"
					},
					{
						"name": "aplspfrom",
						"type": "UTF8"
					},
					{
						"name": "aplspto",
						"type": "UTF8"
					},
					{
						"name": "billsupr",
						"type": "UTF8"
					},
					{
						"name": "billspfrom",
						"type": "UTF8"
					},
					{
						"name": "billspto",
						"type": "UTF8"
					},
					{
						"name": "commsupr",
						"type": "UTF8"
					},
					{
						"name": "commspfrom",
						"type": "UTF8"
					},
					{
						"name": "commspto",
						"type": "UTF8"
					},
					{
						"name": "lapssupr",
						"type": "UTF8"
					},
					{
						"name": "lapsspfrom",
						"type": "UTF8"
					},
					{
						"name": "lapsspto",
						"type": "UTF8"
					},
					{
						"name": "mailsupr",
						"type": "UTF8"
					},
					{
						"name": "mailspfrom",
						"type": "UTF8"
					},
					{
						"name": "mailspto",
						"type": "UTF8"
					},
					{
						"name": "notssupr",
						"type": "UTF8"
					},
					{
						"name": "notsspfrom",
						"type": "UTF8"
					},
					{
						"name": "notsspto",
						"type": "UTF8"
					},
					{
						"name": "rnwlsupr",
						"type": "UTF8"
					},
					{
						"name": "rnwlspfrom",
						"type": "UTF8"
					},
					{
						"name": "rnwlspto",
						"type": "UTF8"
					},
					{
						"name": "campaign",
						"type": "UTF8"
					},
					{
						"name": "SRCEBUS",
						"type": "UTF8"
					},
					{
						"name": "nofrisks",
						"type": "INT32"
					},
					{
						"name": "jacket",
						"type": "UTF8"
					},
					{
						"name": "inststamt01",
						"type": "DOUBLE"
					},
					{
						"name": "inststamt02",
						"type": "DOUBLE"
					},
					{
						"name": "inststamt03",
						"type": "DOUBLE"
					},
					{
						"name": "inststamt04",
						"type": "DOUBLE"
					},
					{
						"name": "inststamt05",
						"type": "DOUBLE"
					},
					{
						"name": "inststamt06",
						"type": "DOUBLE"
					},
					{
						"name": "pstatcode",
						"type": "UTF8"
					},
					{
						"name": "pstatreasn",
						"type": "UTF8"
					},
					{
						"name": "pstattran",
						"type": "INT32"
					},
					{
						"name": "pstatdate",
						"type": "UTF8"
					},
					{
						"name": "pdind",
						"type": "UTF8"
					},
					{
						"name": "register",
						"type": "UTF8"
					},
					{
						"name": "chdrstcda",
						"type": "UTF8"
					},
					{
						"name": "chdrstcdb",
						"type": "UTF8"
					},
					{
						"name": "chdrstcdc",
						"type": "UTF8"
					},
					{
						"name": "chdrstcdd",
						"type": "UTF8"
					},
					{
						"name": "chdrstcde",
						"type": "UTF8"
					},
					{
						"name": "mplpfx",
						"type": "UTF8"
					},
					{
						"name": "mplcoy",
						"type": "UTF8"
					},
					{
						"name": "MPLNUM",
						"type": "UTF8"
					},
					{
						"name": "poapfx",
						"type": "UTF8"
					},
					{
						"name": "poacoy",
						"type": "UTF8"
					},
					{
						"name": "poanum",
						"type": "UTF8"
					},
					{
						"name": "finpfx",
						"type": "UTF8"
					},
					{
						"name": "fincoy",
						"type": "UTF8"
					},
					{
						"name": "finnum",
						"type": "UTF8"
					},
					{
						"name": "wvfdat",
						"type": "UTF8"
					},
					{
						"name": "wvtdat",
						"type": "UTF8"
					},
					{
						"name": "wvfind",
						"type": "UTF8"
					},
					{
						"name": "clupfx",
						"type": "UTF8"
					},
					{
						"name": "clucoy",
						"type": "UTF8"
					},
					{
						"name": "clunum",
						"type": "UTF8"
					},
					{
						"name": "polpln",
						"type": "UTF8"
					},
					{
						"name": "chgflag",
						"type": "UTF8"
					},
					{
						"name": "laprind",
						"type": "UTF8"
					},
					{
						"name": "specind",
						"type": "UTF8"
					},
					{
						"name": "dueflg",
						"type": "UTF8"
					},
					{
						"name": "bfcharge",
						"type": "UTF8"
					},
					{
						"name": "dishnrcnt",
						"type": "INT32"
					},
					{
						"name": "pdtype",
						"type": "UTF8"
					},
					{
						"name": "dishnrdte",
						"type": "UTF8"
					},
					{
						"name": "stmpdtyamt",
						"type": "DOUBLE"
					},
					{
						"name": "stmpdtydte",
						"type": "UTF8"
					},
					{
						"name": "polinc",
						"type": "INT32"
					},
					{
						"name": "polsum",
						"type": "INT32"
					},
					{
						"name": "nxtsfx",
						"type": "INT32"
					},
					{
						"name": "avlisu",
						"type": "UTF8"
					},
					{
						"name": "statement_date",
						"type": "UTF8"
					},
					{
						"name": "billcurr",
						"type": "UTF8"
					},
					{
						"name": "free_switches_used",
						"type": "INT32"
					},
					{
						"name": "free_switches_left",
						"type": "INT32"
					},
					{
						"name": "last_switch_date",
						"type": "UTF8"
					},
					{
						"name": "mandref",
						"type": "INT32"
					},
					{
						"name": "cntiss",
						"type": "UTF8"
					},
					{
						"name": "cntrcv",
						"type": "UTF8"
					},
					{
						"name": "coppn",
						"type": "DOUBLE"
					},
					{
						"name": "cotype",
						"type": "UTF8"
					},
					{
						"name": "covernt",
						"type": "UTF8"
					},
					{
						"name": "docnum",
						"type": "UTF8"
					},
					{
						"name": "dtecan",
						"type": "UTF8"
					},
					{
						"name": "quoteno",
						"type": "UTF8"
					},
					{
						"name": "rnlsts",
						"type": "UTF8"
					},
					{
						"name": "sustrcde",
						"type": "UTF8"
					},
					{
						"name": "bankcode",
						"type": "UTF8"
					},
					{
						"name": "pndate",
						"type": "UTF8"
					},
					{
						"name": "subsflg",
						"type": "UTF8"
					},
					{
						"name": "hrskind",
						"type": "UTF8"
					},
					{
						"name": "slrypflg",
						"type": "UTF8"
					},
					{
						"name": "takovrflg",
						"type": "UTF8"
					},
					{
						"name": "gprnltyp",
						"type": "UTF8"
					},
					{
						"name": "gprmnths",
						"type": "UTF8"
					},
					{
						"name": "coysrvac",
						"type": "UTF8"
					},
					{
						"name": "mrksrvac",
						"type": "UTF8"
					},
					{
						"name": "polschpflg",
						"type": "UTF8"
					},
					{
						"name": "adjdate",
						"type": "UTF8"
					},
					{
						"name": "ptdateab",
						"type": "UTF8"
					},
					{
						"name": "lmbrno",
						"type": "INT32"
					},
					{
						"name": "lheadno",
						"type": "INT32"
					},
					{
						"name": "effdcldt",
						"type": "UTF8"
					},
					{
						"name": "pntrcde",
						"type": "UTF8"
					},
					{
						"name": "taxflag",
						"type": "UTF8"
					},
					{
						"name": "agedef",
						"type": "UTF8"
					},
					{
						"name": "TERMAGE",
						"type": "UTF8"
					},
					{
						"name": "personcov",
						"type": "UTF8"
					},
					{
						"name": "enrolltyp",
						"type": "UTF8"
					},
					{
						"name": "splitsubs",
						"type": "UTF8"
					},
					{
						"name": "dtlsind",
						"type": "UTF8"
					},
					{
						"name": "zrenno",
						"type": "INT32"
					},
					{
						"name": "zendno",
						"type": "INT32"
					},
					{
						"name": "zresnpd",
						"type": "UTF8"
					},
					{
						"name": "ZREPOLNO",
						"type": "UTF8"
					},
					{
						"name": "zcomtyp",
						"type": "UTF8"
					},
					{
						"name": "zrinum",
						"type": "UTF8"
					},
					{
						"name": "zschprt",
						"type": "UTF8"
					},
					{
						"name": "zpaymode",
						"type": "UTF8"
					},
					{
						"name": "user_profile",
						"type": "UTF8"
					},
					{
						"name": "jobname",
						"type": "UTF8"
					},
					{
						"name": "datime",
						"type": "UTF8"
					},
					{
						"name": "job_name",
						"type": "UTF8"
					},
					{
						"name": "currfrom_dfm",
						"type": "UTF8"
					},
					{
						"name": "currto_dfm",
						"type": "UTF8"
					},
					{
						"name": "statdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "occdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "ccdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "crdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "billcd_dfm",
						"type": "UTF8"
					},
					{
						"name": "btdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "ptdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "sinstfrom_dfm",
						"type": "UTF8"
					},
					{
						"name": "sinstto_dfm",
						"type": "UTF8"
					},
					{
						"name": "instfrom_dfm",
						"type": "UTF8"
					},
					{
						"name": "instto_dfm",
						"type": "UTF8"
					},
					{
						"name": "billdate01_dfm",
						"type": "UTF8"
					},
					{
						"name": "billdate02_dfm",
						"type": "UTF8"
					},
					{
						"name": "billdate03_dfm",
						"type": "UTF8"
					},
					{
						"name": "billdate04_dfm",
						"type": "UTF8"
					},
					{
						"name": "pstatdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "wvfdat_dfm",
						"type": "UTF8"
					},
					{
						"name": "wvtdat_dfm",
						"type": "UTF8"
					},
					{
						"name": "dishnrdte_dfm",
						"type": "UTF8"
					},
					{
						"name": "stmpdtydte_dfm",
						"type": "UTF8"
					},
					{
						"name": "statement_date_dfm",
						"type": "UTF8"
					},
					{
						"name": "last_switch_date_dfm",
						"type": "UTF8"
					},
					{
						"name": "cntiss_dfm",
						"type": "UTF8"
					},
					{
						"name": "cntrcv_dfm",
						"type": "UTF8"
					},
					{
						"name": "dtecan_dfm",
						"type": "UTF8"
					},
					{
						"name": "pndate_dfm",
						"type": "UTF8"
					},
					{
						"name": "adjdate_dfm",
						"type": "UTF8"
					},
					{
						"name": "ptdateab_dfm",
						"type": "UTF8"
					},
					{
						"name": "effdcldt_dfm",
						"type": "UTF8"
					},
					{
						"name": "populationdate_1",
						"type": "UTF8"
					},
					{
						"name": "populationdate_2",
						"type": "UTF8"
					},
					{
						"name": "populationdate_3",
						"type": "UTF8"
					},
					{
						"name": "populationdate_4",
						"type": "UTF8"
					},
					{
						"name": "populationdate_5",
						"type": "UTF8"
					},
					{
						"name": "populationdate_6",
						"type": "UTF8"
					},
					{
						"name": "populationdate_7",
						"type": "UTF8"
					},
					{
						"name": "populationdate_8",
						"type": "UTF8"
					},
					{
						"name": "populationdate_9",
						"type": "UTF8"
					},
					{
						"name": "populationdate_10",
						"type": "UTF8"
					},
					{
						"name": "system_createbyuser",
						"type": "UTF8"
					},
					{
						"name": "system_createdate",
						"type": "UTF8"
					},
					{
						"name": "system_changebyuser",
						"type": "UTF8"
					},
					{
						"name": "system_changedate",
						"type": "UTF8"
					},
					{
						"name": "ingestion_date",
						"type": "UTF8"
					},
					{
						"name": "valid_from_dt",
						"type": "UTF8"
					},
					{
						"name": "valid_to_dt",
						"type": "INT64"
					},
					{
						"name": "load_dt",
						"type": "INT64"
					},
					{
						"name": "activeflag",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		}
	]
}