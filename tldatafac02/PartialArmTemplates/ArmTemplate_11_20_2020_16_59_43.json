{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tldatafac02"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2_copy3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FILE_LIST]",
								"storedProcedureParameters": {
									"P_WNID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_WNID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "img_SqlServerTable1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {
												"weblink": {
													"value": "@item().FILE_NM",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary2",
											"type": "DatasetReference",
											"parameters": {
												"p_path": {
													"value": "@pipeline().parameters.P_WNID",
													"type": "Expression"
												},
												"p_filename": "@concat(item().FILE_ID, '.jpg')"
											}
										}
									]
								},
								{
									"name": "insert success log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[CNTL].[PROC_CNTL_INS_FILE_LOG]",
										"storedProcedureParameters": {
											"P_CNT_SRC": {
												"value": null,
												"type": "Int32"
											},
											"P_CNT_TGT": {
												"value": null,
												"type": "Int32"
											},
											"P_LOAD_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_PCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PSC_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": {
													"value": "@pipeline().parameters.P_WNID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_SIZE_SRC": {
												"value": {
													"value": "@activity('Copy data1').output.dataRead",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SIZE_TGT": {
												"value": {
													"value": "@activity('Copy data1').output.dataWritten",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SRC_FILE_NM": {
												"value": {
													"value": "@item().FILE_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_ST": {
												"value": "FINISHED",
												"type": "String"
											},
											"P_STREAM_SEQ_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_TGT_FILE_NM": {
												"value": {
													"value": "@concat(item().FILE_ID, '.jpg')",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_UDT_BY": {
												"value": "INTELTION",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "insert fail log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[CNTL].[PROC_CNTL_INS_FILE_LOG]",
										"storedProcedureParameters": {
											"P_CNT_SRC": {
												"value": null,
												"type": "Int32"
											},
											"P_CNT_TGT": {
												"value": null,
												"type": "Int32"
											},
											"P_LOAD_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_PCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PSC_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": {
													"value": "@pipeline().parameters.P_WNID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_SIZE_SRC": {
												"value": {
													"value": "@activity('Copy data1').output.dataRead",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SIZE_TGT": {
												"value": {
													"value": "@activity('Copy data1').output.dataWritten",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SRC_FILE_NM": {
												"value": {
													"value": "@item().FILE_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_ST": {
												"value": "FAILED",
												"type": "String"
											},
											"P_STREAM_SEQ_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_TGT_FILE_NM": {
												"value": {
													"value": "@concat(item().FILE_ID, '.jpg')",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_UDT_BY": {
												"value": "INTELTION",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "RMRK",
										"value": {
											"value": "@pipeline().parameters.P_WNID",
											"type": "Expression"
										}
									},
									{
										"name": "STM_NM",
										"value": "IMAGENET"
									},
									{
										"name": "UDT_BY",
										"value": "INTELTION"
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"sqlWriterStoredProcedureName": "[[CNTL].[spInsertFile]",
								"sqlWriterTableType": "CNTL.UrlTableType",
								"storedProcedureTableTypeParameterName": "UrlType"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {
									"p_weblink": {
										"value": "@concat('http://www.image-net.org/api/text/imagenet.synset.geturls?wnid=', pipeline().parameters.P_WNID)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "img_SqlServerTable1",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"P_WNID": {
						"type": "string",
						"defaultValue": "n09266604"
					},
					"P_PSC_NM": {
						"type": "string",
						"defaultValue": "IMAGENET"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-20T04:35:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/img_SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_looploadfile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FILE_LIST]",
								"storedProcedureParameters": {
									"P_WNID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_WNID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "img_SqlServerTable1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {
												"weblink": {
													"value": "@item().FILE_NM",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary2",
											"type": "DatasetReference",
											"parameters": {
												"p_path": {
													"value": "@pipeline().parameters.P_WNID",
													"type": "Expression"
												},
												"p_filename": "@concat(item().FILE_ID, '.jpg')"
											}
										}
									]
								},
								{
									"name": "insert success log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[CNTL].[PROC_CNTL_INS_FILE_LOG]",
										"storedProcedureParameters": {
											"P_CNT_SRC": {
												"value": null,
												"type": "Int32"
											},
											"P_CNT_TGT": {
												"value": null,
												"type": "Int32"
											},
											"P_LOAD_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_PCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PSC_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": {
													"value": "@pipeline().parameters.P_WNID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_SIZE_SRC": {
												"value": {
													"value": "@activity('Copy data1').output.dataRead",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SIZE_TGT": {
												"value": {
													"value": "@activity('Copy data1').output.dataWritten",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SRC_FILE_NM": {
												"value": {
													"value": "@item().FILE_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_ST": {
												"value": "FINISHED",
												"type": "String"
											},
											"P_STREAM_SEQ_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_TGT_FILE_NM": {
												"value": {
													"value": "@concat(item().FILE_ID, '.jpg')",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_UDT_BY": {
												"value": "INTELTION",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "insert fail log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[CNTL].[PROC_CNTL_INS_FILE_LOG]",
										"storedProcedureParameters": {
											"P_CNT_SRC": {
												"value": null,
												"type": "Int32"
											},
											"P_CNT_TGT": {
												"value": null,
												"type": "Int32"
											},
											"P_LOAD_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_PCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PSC_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": {
													"value": "@pipeline().parameters.P_WNID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_SIZE_SRC": {
												"value": {
													"value": "@activity('Copy data1').output.dataRead",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SIZE_TGT": {
												"value": {
													"value": "@activity('Copy data1').output.dataWritten",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"P_SRC_FILE_NM": {
												"value": {
													"value": "@item().FILE_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_ST": {
												"value": "FAILED",
												"type": "String"
											},
											"P_STREAM_SEQ_ID": {
												"value": null,
												"type": "Int64"
											},
											"P_TGT_FILE_NM": {
												"value": {
													"value": "@concat(item().FILE_ID, '.jpg')",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_UDT_BY": {
												"value": "INTELTION",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "RMRK",
										"value": {
											"value": "@pipeline().parameters.P_WNID",
											"type": "Expression"
										}
									},
									{
										"name": "STM_NM",
										"value": "IMAGENET"
									},
									{
										"name": "UDT_BY",
										"value": "INTELTION"
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"sqlWriterStoredProcedureName": "[[CNTL].[spInsertFile]",
								"sqlWriterTableType": "CNTL.UrlTableType",
								"storedProcedureTableTypeParameterName": "UrlType"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {
									"p_weblink": {
										"value": "@concat('http://www.image-net.org/api/text/imagenet.synset.geturls?wnid=', pipeline().parameters.P_WNID)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "img_SqlServerTable1",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"P_WNID": {
						"type": "string",
						"defaultValue": "n09266604"
					},
					"P_PSC_NM": {
						"type": "string",
						"defaultValue": "IMAGENET"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-20T07:58:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/img_SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_mainloadfile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {
									"p_weblink": "http://image-net.org/archive/words.txt"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "img"
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText2_copy1",
								"type": "DatasetReference",
								"parameters": {
									"p_container": {
										"value": "img",
										"type": "Expression"
									},
									"p_filename": {
										"value": "wnid.txt",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "pl_looploadfile",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_looploadfile",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_WNID": {
												"value": "@item().Prop_0",
												"type": "Expression"
											},
											"P_PSC_NM": {
												"value": "@pipeline().parameters.P_PSC_NM",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_PSC_NM": {
						"type": "string",
						"defaultValue": "IMAGENET"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-20T07:59:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2_copy1')]",
				"[concat(variables('factoryId'), '/pipelines/pl_looploadfile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference",
					"parameters": {
						"weblink": {
							"value": "@dataset().weblink",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"weblink": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMG"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_path": {
						"type": "string"
					},
					"p_filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMG"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_path",
							"type": "Expression"
						},
						"fileSystem": "img"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string",
						"defaultValue": "sentrisk"
					},
					"p_filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMG"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference",
					"parameters": {
						"weblink": {
							"value": "@dataset().p_weblink",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"p_weblink": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMG"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/img_SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IMG"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "CNTL",
					"table": "CNTL_FILE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"weblink": {
						"type": "string",
						"defaultValue": "http://farm4.static.flickr.com/3577/3324699593_7391c69fc7.jpg"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "@{linkedService().weblink}",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		}
	]
}